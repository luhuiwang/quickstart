245c245,248
<         import pynvml  # type: ignore
---
>         import os
>         _is_tegra=os.path.isdir("/sys/class/tegra-firmware/") or os.path.isfile(
>             "/etc/nv_tegra_release"
>         )
247,249c250,252
<         try:
<             pynvml.nvmlInit()
<             device_count = pynvml.nvmlDeviceGetCount()
---
>         if _is_tegra:
>             import numba.cuda
>             device_count=len(numba.cuda.gpus)
251,254c254,256
<         except (pynvml.nvml.NVMLError, OSError):
<             logger.debug("GPU not detected. Unable to initialize pynvml lib.")
<             return []
<         finally:
---
>         else:
>             import pynvml  # type: ignore
>
256,258c258,268
<                 pynvml.nvmlShutdown()
<             except Exception:  # pylint: disable=broad-except
<                 pass
---
>                 pynvml.nvmlInit()
>                 device_count = pynvml.nvmlDeviceGetCount()
>                 return list(range(device_count))
>             except (pynvml.NVMLError_LibraryNotFound, OSError):
>                 logger.debug("GPU not detected. Unable to initialize pynvml lib.")
>                 return []
>             finally:
>                 try:
>                     pynvml.nvmlShutdown()
>                 except Exception:  # pylint: disable=broad-except
>                     pass